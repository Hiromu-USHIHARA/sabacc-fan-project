
# ディーラー（CPU）行動規則仕様書

## 概要
この仕様書は、カードゲーム「Sabacc」におけるディーラー（CPU）の行動ルールを定義します。目的は、プレイヤーに対して適切に対抗し、手札のスコアを23または-23に近づけることです。スコアが24以上または-24以下になると爆発（Bomb Out）し敗北します。

---

## 基本原則

1. 自身の手札スコア（合計値）を評価
2. プレイヤーの手札スコアと比較
3. 状況に応じて以下の行動から選択：
   - ドロー（カードを1枚引く）
   - 交換（手札のカードを1枚交換）
   - ロック（1枚をロックしてShiftから保護）
   - スタンド（行動終了）

---

## スコアの評価と行動ルール

### 【1】爆発状態（スコアが ±24 を超えている）
- 行動：**交換（Trade）**
- 内容：手札のうち最も数値が大きい（または小さい）カードを交換し、爆発回避を図る

### 【2】スコアが ±20 未満
- 行動：**ドロー（Draw）**
- 内容：さらなる強化を狙ってカードを1枚追加

### 【3】スコアが ±20〜±22
- プレイヤーと比較して判断：

| 状況                          | 行動         |
|-------------------------------|--------------|
| 自スコア > プレイヤースコア   | スタンド     |
| 自スコア < プレイヤースコア   | ドローまたは交換（ランダム） |
| 自スコア = プレイヤースコア   | スタンドまたはロック（ランダム） |

### 【4】スコアが ±23（Pure Sabacc）
- 行動：**スタンド（Stand）**
- 内容：最良スコアであるため確定で終了

---

## 特殊カードに関する対応

| カード名                     | 優先行動 | 理由                         |
|------------------------------|-----------|------------------------------|
| The Idiot (0)                | ロック    | Idiot's Array 形成の可能性を保持 |
| 数値が ±13 〜 ±15 のカード     | 交換      | 爆発リスクを下げるため           |

---

## ロック（Lock）の実行条件

- スコアが20以上かつまだ爆発していない
- 特殊カードを保持している（例: The Idiot）

→ この場合、最も重要なカードを1枚ロック

---

## ランダム行動の導入（自然さの演出）

- 同点時：スタンド or ロック（50%ランダム）
- ±21〜22：ドロー or スタンド（50%ランダム）

---

## 擬似コード例（実装参考）

```
def dealer_action(dealer_hand, user_score):
    score = evaluate(dealer_hand)

    if abs(score) >= 24:
        return 'trade'
    elif abs(score) < 20:
        return 'draw'
    elif abs(score) >= 20 and abs(score) < 23:
        if score > user_score:
            return 'stand'
        elif score < user_score:
            return random.choice(['draw', 'trade'])
        else:
            return random.choice(['stand', 'lock'])
    elif abs(score) == 23:
        return 'stand'
```

---

## 備考
- 本ロジックは1ラウンド完結型の簡易Sabaccを対象としています。
- 将来的には勝率計算やShift予測などの高度化が可能です。
